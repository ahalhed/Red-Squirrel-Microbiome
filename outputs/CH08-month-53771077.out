Unloading StdEnv/2020

The following have been reloaded with a version change:
  1) gcc/9.3.0 => gcc/7.3.0                 4) java/13.0.2 => java/1.8.0_192
  2) gcccore/.9.3.0 => gcccore/.7.3.0       5) r/4.0.2 => r/3.6.0
  3) imkl/2020.1.217 => imkl/2018.3.222

[1] "Set up (working directory, theme, and packages)"
Loading required package: permute
Loading required package: lattice
This is vegan 2.5-6
Loading required package: MASS
Loading required package: NADA
Loading required package: survival

Attaching package: ‘NADA’

The following object is masked from ‘package:stats’:

    cor

Loading required package: truncnorm
Loading required package: ALDEx2
Loading required package: car
Loading required package: carData
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.1     ✔ dplyr   1.0.0
✔ tidyr   1.1.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ dplyr::recode() masks car::recode()
✖ dplyr::select() masks MASS::select()
✖ purrr::some()   masks car::some()
[1] "Initiate functions for analysis"
[1] "Read in the Data"
[1] "Building phyloseq object"
[1] "Read in the metadata"
[1] "Aitchison transformation"
No. corrected values:  19086552 
[1] "Extract Core"
[1] "Subset the OTU table to find core and non-core OTUs"
[1] "Accessing the XY data by month"
[1] "Months in this Grid"
[1] 5 4
[1] "Computing Euclidean Distances"
[1] "Maximum Euclidean Distance by Month"
$`Month 5`
[1] 20.70024

$`Month 4`
[1] 20.30394

Warning message:
`summarise_each_()` is deprecated as of dplyr 0.7.0.
Please use `across()` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_warnings()` to see where this warning was generated. 
[1] "Build the community object (OTU table) for grid/year/month"
[1] "Extract metadata for grid/year/month"
[1] "Removing pobjects that are no longer needed"
[1] "Unweighted PCNM - for use with all OTU tables"
                               PCNM1       PCNM2        PCNM3        PCNM4
P3026.10228.F.4.CH.2008  0.039344220  0.35382127  0.223618370  0.077065832
P3096.10086.F.4.CH.2008  0.299228892 -0.14481016 -0.052414716  0.051320324
P3137.8636.F.4.CH.2008  -0.256468087 -0.11700582  0.003930415 -0.005459016
P1445.10082.F.4.CH.2008  0.116520144 -0.27318508  0.138537901  0.055260230
P1407.8636.F.4.CH.2008  -0.256468087 -0.11700582  0.003930415 -0.005459016
P1873.10239.F.2.CH.2008  0.226365619 -0.16348365  0.173311444  0.065479493
P1321.8259.F.4.CH.2008   0.063000905  0.33423153 -0.188158965  0.404415474
P1442.8505.F.3.CH.2008   0.054322032  0.26239906 -0.166182982  0.267241342
P1877.8657.F.4.CH.2008  -0.254797288 -0.11505438  0.014182978 -0.007686893
P1548.8407.F.4.CH.2008  -0.233319233 -0.08814957 -0.274362498  0.041613169
P1813.8636.F.4.CH.2008  -0.190408548 -0.18369403  0.111116408  0.049242608
P1372.10264.F.2.CH.2008  0.060511488  0.34974596 -0.076578207  0.318260686
P1274.8636.F.4.CH.2008  -0.256468087 -0.11700582  0.003930415 -0.005459016
P1549.10065.F.4.CH.2008  0.301296705 -0.14914381 -0.049446662  0.054124411
P1478.10082.F.4.CH.2008  0.097644407 -0.29937514 -0.080495748  0.084140593
P1532.10713.F.4.CH.2008  0.061302115  0.22767153 -0.168675628 -0.490551655
P1749.8095.F.3.CH.2008  -0.243177047 -0.02549313 -0.252933772  0.005992549
P1420.10262.F.2.CH.2008 -0.177415732  0.09114871  0.315666379 -0.136718797
P1414.10061.F.4.CH.2008  0.314918750 -0.10761105 -0.101131046 -0.184090561
P1447.10228.F.4.CH.2008  0.006062751  0.30261660  0.334468649 -0.112461667
P1002.10262.F.2.CH.2008 -0.092643678  0.04263987  0.513058842 -0.027539360
P1801.8407.F.4.CH.2008  -0.245994200 -0.02768423 -0.252943270  0.006437230
P1419.10693.F.3.CH.2008  0.105153219  0.20619501 -0.196909520 -0.567900773
P1475.10086.F.4.CH.2008  0.235123122 -0.07828421 -0.148830647 -0.002746678
P1410.10239.F.2.CH.2008  0.226365619 -0.16348365  0.173311444  0.065479493
                               PCNM5        PCNM6        PCNM7        PCNM8
P3026.10228.F.4.CH.2008 -0.254181361 -0.426730015 -0.117081042 -0.001051173
P3096.10086.F.4.CH.2008 -0.147802686 -0.018521500  0.146460290  0.066446220
P3137.8636.F.4.CH.2008  -0.059495475  0.104281652 -0.112993267  0.026163005
P1445.10082.F.4.CH.2008 -0.019432761  0.168449911 -0.296818178  0.315565394
P1407.8636.F.4.CH.2008  -0.059495475  0.104281652 -0.112993267  0.026163005
P1873.10239.F.2.CH.2008  0.352942075 -0.188405172  0.089406075 -0.032795624
P1321.8259.F.4.CH.2008   0.208218828  0.278066568 -0.075168576 -0.011137486
P1442.8505.F.3.CH.2008   0.231631172  0.404467569  0.371984958 -0.006031270
P1877.8657.F.4.CH.2008  -0.057537773  0.117618884 -0.120345652  0.021100171
P1548.8407.F.4.CH.2008  -0.054882423 -0.232456551  0.101723445 -0.461939347
P1813.8636.F.4.CH.2008   0.300111588 -0.098877592  0.024043782 -0.080003571
P1372.10264.F.2.CH.2008 -0.045119666 -0.214698308 -0.513054400 -0.003576293
P1274.8636.F.4.CH.2008  -0.059495475  0.104281652 -0.112993267  0.026163005
P1549.10065.F.4.CH.2008 -0.139554222 -0.021421948  0.140521999  0.054748704
P1478.10082.F.4.CH.2008 -0.106558992  0.026272345 -0.151433919 -0.571871173
P1532.10713.F.4.CH.2008  0.195745555  0.041466594 -0.159161426 -0.081014831
P1749.8095.F.3.CH.2008  -0.003615702 -0.250328264  0.236390570  0.328970090
P1420.10262.F.2.CH.2008 -0.104079162  0.381256768  0.122096201 -0.143816841
P1414.10061.F.4.CH.2008 -0.033369602 -0.006682755  0.018934231  0.066285712
P1447.10228.F.4.CH.2008 -0.283163335 -0.087959478  0.413803774 -0.189441458
P1002.10262.F.2.CH.2008  0.111968694  0.020254139 -0.070701092  0.192141338
P1801.8407.F.4.CH.2008  -0.002461030 -0.249360945  0.232296249  0.322453791
P1419.10693.F.3.CH.2008  0.178844668  0.037622533 -0.142972666  0.012577609
P1475.10086.F.4.CH.2008 -0.502159517  0.195527432 -0.001350895  0.156696645
P1410.10239.F.2.CH.2008  0.352942075 -0.188405172  0.089406075 -0.032795624
                                PCNM9      PCNM10        PCNM11        PCNM12
P3026.10228.F.4.CH.2008 -0.2943894152  0.15639533 -2.355677e-02 -9.413840e-04
P3096.10086.F.4.CH.2008  0.0757153132 -0.24068794 -6.074987e-02 -5.605453e-01
P3137.8636.F.4.CH.2008  -0.0338624853  0.04416646  2.907507e-01 -9.656095e-02
P1445.10082.F.4.CH.2008 -0.2679166409  0.06965710  2.143424e-02  3.692507e-03
P1407.8636.F.4.CH.2008  -0.0338624853  0.04416646  2.907507e-01 -9.656095e-02
P1873.10239.F.2.CH.2008  0.0493251569 -0.04141138  1.119371e-03 -1.333494e-03
P1321.8259.F.4.CH.2008   0.1486122582 -0.01130474  2.651502e-02 -3.735008e-04
P1442.8505.F.3.CH.2008  -0.3813722485  0.19500968 -2.291935e-02 -8.846216e-04
P1877.8657.F.4.CH.2008  -0.0217029192  0.03812325 -5.731645e-01  4.074855e-01
P1548.8407.F.4.CH.2008  -0.1102613782  0.08929744 -9.055671e-03 -6.527620e-03
P1813.8636.F.4.CH.2008   0.1186127739 -0.10909866 -3.034475e-01 -1.247244e-01
P1372.10264.F.2.CH.2008  0.3243377966 -0.10678718 -3.458410e-06 -2.769035e-06
P1274.8636.F.4.CH.2008  -0.0338624853  0.04416646  2.907507e-01 -9.656095e-02
P1549.10065.F.4.CH.2008  0.0644058794 -0.23709615  3.368712e-01  6.774737e-01
P1478.10082.F.4.CH.2008 -0.1222741629  0.07251442  7.947795e-03 -1.096469e-03
P1532.10713.F.4.CH.2008 -0.3110736231 -0.57678339  1.031109e-02  4.893083e-04
P1749.8095.F.3.CH.2008   0.0809271692 -0.04609991  2.367654e-01 -2.930833e-02
P1420.10262.F.2.CH.2008  0.5143471496 -0.17695711  7.837644e-04  1.552544e-04
P1414.10061.F.4.CH.2008  0.2672976701  0.49420783  2.518229e-04  4.588695e-05
P1447.10228.F.4.CH.2008 -0.0001026048  0.02863445  3.362084e-02  7.449167e-03
P1002.10262.F.2.CH.2008 -0.2046148697  0.08449626 -7.226915e-03 -8.271458e-03
P1801.8407.F.4.CH.2008   0.0803975678 -0.04426398 -2.400033e-01  4.791494e-02
P1419.10693.F.3.CH.2008  0.1221515791  0.37438061 -6.812319e-03 -1.779436e-03
P1475.10086.F.4.CH.2008 -0.0801601526 -0.10331393 -3.020523e-01 -1.179013e-01
P1410.10239.F.2.CH.2008  0.0493251569 -0.04141138  1.119371e-03 -1.333494e-03
                               PCNM13        PCNM14
P3026.10228.F.4.CH.2008 -7.289873e-03 -1.592136e-03
P3096.10086.F.4.CH.2008 -2.995319e-01 -4.329815e-01
P3137.8636.F.4.CH.2008   8.273714e-02 -7.299297e-02
P1445.10082.F.4.CH.2008  7.924643e-03 -1.987078e-04
P1407.8636.F.4.CH.2008   8.273714e-02 -7.299297e-02
P1873.10239.F.2.CH.2008 -5.548276e-04  5.173478e-04
P1321.8259.F.4.CH.2008   8.447960e-03  4.534711e-04
P1442.8505.F.3.CH.2008  -7.172550e-03 -1.527516e-03
P1877.8657.F.4.CH.2008  -4.648492e-01 -2.439722e-01
P1548.8407.F.4.CH.2008  -6.547787e-03 -1.870693e-04
P1813.8636.F.4.CH.2008   2.165585e-01  4.585715e-01
P1372.10264.F.2.CH.2008 -1.352365e-04 -2.326230e-05
P1274.8636.F.4.CH.2008   8.273714e-02 -7.299297e-02
P1549.10065.F.4.CH.2008  8.318774e-02 -3.277007e-02
P1478.10082.F.4.CH.2008 -4.944595e-03  8.347430e-04
P1532.10713.F.4.CH.2008 -2.125141e-03 -7.451726e-03
P1749.8095.F.3.CH.2008  -5.340938e-01  3.981506e-01
P1420.10262.F.2.CH.2008  2.565166e-07 -2.585648e-05
P1414.10061.F.4.CH.2008 -1.303452e-04 -3.742445e-04
P1447.10228.F.4.CH.2008  1.351542e-02  2.983242e-04
P1002.10262.F.2.CH.2008 -5.246158e-03  2.519428e-04
P1801.8407.F.4.CH.2008   5.362075e-01 -3.898122e-01
P1419.10693.F.3.CH.2008  3.405038e-03  6.536612e-03
P1475.10086.F.4.CH.2008  2.157177e-01  4.637635e-01
P1410.10239.F.2.CH.2008 -5.548276e-04  5.173478e-04
                              PCNM1       PCNM2       PCNM3        PCNM4
P1060.8657.F.4.CH.2008   0.09044792  0.44247410 -0.12561626  0.118700236
P1093.8588.F.3.CH.2008  -0.27489497 -0.14164682 -0.12096300  0.126806005
P0640.10228.F.4.CH.2008 -0.19013750  0.21879772  0.24594115  0.001202901
P1151.8505.F.3.CH.2008  -0.01655050  0.11468887 -0.01436416  0.301945291
P1431.10061.F.4.CH.2008  0.21788927 -0.30042551  0.05686846  0.082194158
P1453.10228.F.4.CH.2008 -0.26641971  0.05276553  0.25034294 -0.032044893
P1094.10713.F.4.CH.2008 -0.07820764 -0.33817832 -0.28532500  0.434313604
P0985.10264.F.2.CH.2008 -0.22319060  0.01950639  0.11917245 -0.378921397
P1361.10125.F.3.CH.2008  0.24556765 -0.16456842 -0.01003538 -0.213376084
P1337.8238.F.1.CH.2008   0.15214395  0.20319644 -0.45119209 -0.250965879
P1165.10687.F.1.CH.2008 -0.26162993 -0.01498617  0.07987207 -0.329630399
P0956.10125.F.3.CH.2008  0.24556765 -0.16456842 -0.01003538 -0.213376084
P1026.10713.F.4.CH.2008 -0.23902138 -0.14158167 -0.15409918  0.270105850
P1144.8095.F.3.CH.2008   0.05483259  0.26160544 -0.49059728 -0.073229007
P1025.13676.F.1.CH.2008  0.23036991 -0.21910396  0.15433602 -0.102331013
P0939.10082.F.4.CH.2008  0.24030875  0.08570717  0.13693257 -0.005891830
P1346.10280.F.1.CH.2008 -0.30584174 -0.13582521 -0.07682440 -0.027618344
P0744.8588.F.3.CH.2008  -0.29378100 -0.05544105  0.01584499 -0.203175670
P1555.8701.F.1.CH.2008   0.24586525  0.15811579 -0.03297528 -0.033356951
P1536.10239.F.2.CH.2008  0.18411335  0.05042479  0.37627967  0.086173067
P1388.10262.F.2.CH.2008  0.02467943  0.36946881  0.27956862  0.360282282
P0984.13677.F.1.CH.2008  0.21788927 -0.30042551  0.05686846  0.082194158
                                PCNM5       PCNM6        PCNM7        PCNM8
P1060.8657.F.4.CH.2008  -0.2212303004  0.19676568  0.106807539 -0.018101576
P1093.8588.F.3.CH.2008  -0.1665320117 -0.20902833 -0.003611712 -0.550074993
P0640.10228.F.4.CH.2008 -0.2988345950  0.03449524  0.199274361 -0.053367942
P1151.8505.F.3.CH.2008   0.7655709943 -0.18339895  0.050676259 -0.086280279
P1431.10061.F.4.CH.2008  0.0146269250  0.24418526  0.000801733 -0.004071668
P1453.10228.F.4.CH.2008 -0.0096238525 -0.14222617 -0.374648445  0.193128659
P1094.10713.F.4.CH.2008 -0.0379317035  0.28826248  0.199292279  0.102573563
P0985.10264.F.2.CH.2008  0.2326496432  0.35917121  0.129339954  0.432546046
P1361.10125.F.3.CH.2008  0.0464181388 -0.28505979  0.030776819  0.067377733
P1337.8238.F.1.CH.2008   0.0007560654 -0.28589875  0.213038121  0.133789537
P1165.10687.F.1.CH.2008  0.1366718012  0.18459177  0.123748603 -0.495697819
P0956.10125.F.3.CH.2008  0.0464181388 -0.28505979  0.030776819  0.067377733
P1026.10713.F.4.CH.2008 -0.2415844292 -0.34979189 -0.151260884  0.308500084
P1144.8095.F.3.CH.2008   0.0432176129  0.27122340 -0.486948817 -0.054416418
P1025.13676.F.1.CH.2008  0.0370413834 -0.01262428 -0.257474454 -0.176940532
P0939.10082.F.4.CH.2008 -0.1644521700 -0.09969223  0.476578411 -0.023579235
P1346.10280.F.1.CH.2008 -0.0394887744  0.09091801  0.165213377  0.176615835
P0744.8588.F.3.CH.2008  -0.0138637480 -0.14543938 -0.089124197 -0.010047183
P1555.8701.F.1.CH.2008  -0.1412682348  0.11534914 -0.133910850 -0.107824847
P1536.10239.F.2.CH.2008 -0.1726029929  0.02718446 -0.279123421  0.073364244
P1388.10262.F.2.CH.2008  0.1694151845 -0.05811235  0.048976773  0.029200724
P0984.13677.F.1.CH.2008  0.0146269250  0.24418526  0.000801733 -0.004071668
                               PCNM9        PCNM10
P1060.8657.F.4.CH.2008   0.003993839 -1.014361e-01
P1093.8588.F.3.CH.2008  -0.147373720 -6.508173e-04
P0640.10228.F.4.CH.2008  0.226850784  7.498110e-02
P1151.8505.F.3.CH.2008   0.179284571 -3.110929e-03
P1431.10061.F.4.CH.2008 -0.014369783 -2.513940e-01
P1453.10228.F.4.CH.2008 -0.433073210 -1.842965e-02
P1094.10713.F.4.CH.2008 -0.196732820  1.381831e-03
P0985.10264.F.2.CH.2008  0.076757721 -1.834332e-03
P1361.10125.F.3.CH.2008 -0.133897094  2.977211e-02
P1337.8238.F.1.CH.2008  -0.238718972 -2.098842e-02
P1165.10687.F.1.CH.2008 -0.215496394  6.079299e-03
P0956.10125.F.3.CH.2008 -0.133897094  2.977211e-02
P1026.10713.F.4.CH.2008  0.275927197  3.825855e-03
P1144.8095.F.3.CH.2008   0.047392065 -3.958839e-05
P1025.13676.F.1.CH.2008  0.386237780  4.433557e-01
P0939.10082.F.4.CH.2008  0.126429573 -6.445521e-02
P1346.10280.F.1.CH.2008 -0.015009856  5.447925e-01
P0744.8588.F.3.CH.2008   0.395694783 -5.704170e-01
P1555.8701.F.1.CH.2008   0.202763034  1.646173e-01
P1536.10239.F.2.CH.2008 -0.259084357 -5.708705e-02
P1388.10262.F.2.CH.2008 -0.119308267  4.265924e-02
P0984.13677.F.1.CH.2008 -0.014369783 -2.513940e-01
[1] "Acessing PCNM scores"
[1] "Analysis for Core OTUs"
[1] "Variance partitioning - Core OTUs"
Warning messages:
1: collinearity detected in X2: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X2: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 8071 
            Variance: 336.29 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.61421       0.07409     TRUE
[b+c] = X2           16   0.70790       0.12370     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           8                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          10                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 6564.1 
            Variance: 312.58 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           10   0.52646       0.09598     TRUE
[b+c] = X2           12   0.63697       0.15292     TRUE
[a+b+c] = X1+X2      20   0.98927       0.77465     TRUE
Individual fractions                                    
[a] = X1|X2           8                 0.62172     TRUE
[b]                   0                -0.52575    FALSE
[c] = X2|X1          10                 0.67867     TRUE
[d] = Residuals                         0.22535    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

               Inertia Proportion Rank
Total         336.2922     1.0000     
Constrained   238.0607     0.7079   16
Unconstrained  98.2315     0.2921    8
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
54.41 32.83 24.42 20.65 17.96 15.86 12.44  9.76  9.44  8.57  8.18  6.34  6.00 
RDA14 RDA15 RDA16 
 4.45  4.07  2.67 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8 
20.158 17.440 13.232 12.450 10.589  8.781  8.421  7.161 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

              Inertia Proportion Rank
Total         312.576      1.000     
Constrained   199.101      0.637   12
Unconstrained 113.475      0.363    9
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
37.11 32.31 21.82 18.98 18.34 14.54 13.03 11.17 10.58  8.25  6.94  6.04 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8    PC9 
30.163 22.178 13.780 12.679  9.779  9.020  8.333  4.824  2.719 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)  
Model    16  238.061 1.2117  0.045 *
Residual  8   98.231                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)   
Model    12   199.10 1.3159  0.007 **
Residual  9   113.47                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.7078984

$`Month 5`$adj.r.squared
[1] 0.1236951


$`Month 4`
$`Month 4`$r.squared
[1] 0.6369677

$`Month 4`$adj.r.squared
[1] 0.1529245


[1] "Testing with partial RDA (fraction [a]) - core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

               Inertia Proportion Rank
Total         336.2922     1.0000     
Conditional   206.5526     0.6142   14
Constrained   129.7396     0.3858   10
Unconstrained   0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 
32.01 23.76 16.80 14.23 10.65  8.73  7.61  6.87  5.84  3.25 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         312.57603    1.00000     
Conditional   164.55989    0.52646   10
Constrained   144.66188    0.46281   10
Unconstrained   3.35426    0.01073    1
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
  RDA1   RDA2   RDA3   RDA4   RDA5   RDA6   RDA7   RDA8   RDA9  RDA10 
29.683 25.507 17.735 14.362 12.901 11.111 10.282  9.091  7.560  6.430 

Eigenvalues for unconstrained axes:
  PC1 
3.354 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    10   129.74         
Residual  0     0.00         

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance      F Pr(>F)   
Model    10  144.662 4.3128   0.01 **
Residual  1    3.354                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.3857942

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.4628054

$`Month 4`$adj.r.squared
[1] 0.6786729


[1] "Spatial variables - core OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                 R2.adjusted
<All variables>  0.074094005
+ PCNM12         0.017987207
+ PCNM1          0.015770711
+ PCNM3          0.014205876
+ PCNM2          0.011017351
+ PCNM5          0.004751488
+ PCNM9          0.003740580
+ PCNM14         0.003544035
+ PCNM10         0.003464960
+ PCNM6          0.001603427
<none>           0.000000000
+ PCNM11        -0.005756020
+ PCNM13        -0.007383233
+ PCNM7         -0.008730500
+ PCNM8         -0.009021785
+ PCNM4         -0.012979313

         Df    AIC      F Pr(>F)  
+ PCNM12  1 146.91 1.4396   0.06 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0 
Call: x ~ 1 
 
                 R2.adjusted
<All variables>  0.095975899
+ PCNM1          0.029149673
+ PCNM2          0.015951286
+ PCNM4          0.009079969
+ PCNM7          0.008954393
+ PCNM6          0.008585754
+ PCNM3          0.004329580
+ PCNM9          0.001192776
<none>           0.000000000
+ PCNM8         -0.005046668
+ PCNM10        -0.005801943
+ PCNM5         -0.013608076

        Df    AIC      F Pr(>F)  
+ PCNM1  1 127.64 1.6305  0.022 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0.02914967 
Call: x ~ PCNM1 
 
                R2.adjusted
<All variables>  0.09597590
+ PCNM2          0.04747469
+ PCNM4          0.04024173
+ PCNM7          0.04010954
+ PCNM6          0.03972150
+ PCNM3          0.03524132
+ PCNM9          0.03193942
<none>           0.02914967
+ PCNM8          0.02537158
+ PCNM10         0.02457656
+ PCNM5          0.01635958

        Df    AIC      F Pr(>F)  
+ PCNM2  1 128.09 1.3848  0.072 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total           336.3     
Unconstrained   336.3   24
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
59.92 35.70 26.96 23.95 23.14 20.77 17.82 14.77 
(Showing 8 of 24 unconstrained eigenvalues)


$`Month 4`
Call: rda(formula = x ~ PCNM1, data = data)

                Inertia Proportion Rank
Total         312.57603    1.00000     
Constrained    23.56218    0.07538    1
Unconstrained 289.01385    0.92462   20
Inertia is variance 

Eigenvalues for constrained axes:
  RDA1 
23.562 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
48.95 38.14 24.15 22.49 18.86 17.81 14.50 13.09 
(Showing 8 of 20 unconstrained eigenvalues)


[1] "Summary of spatial selection process - core OTU"
$`Month 5`
NULL

$`Month 4`
                  R2.adj Df    AIC      F Pr(>F)  
+ PCNM1         0.029150  1 127.64 1.6305  0.022 *
<All variables> 0.095976                          
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[1] "ANOVA on full spatial selection - core OTU"
$`Month 5`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0     0.00  0       
Residual 24   336.29          

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ PCNM1, data = data)
         Df Variance      F Pr(>F)  
Model     1   23.562 1.6305  0.025 *
Residual 20  289.014                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[1] "Partition Bray-Curtis dissimilarities - core OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X1: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 4.9729 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           16   0.70423       0.11270     TRUE
[b+c] = X2           14   0.57335      -0.02397     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          10                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           8                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 3.5739 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12   0.60937       0.08853     TRUE
[b+c] = X2           10   0.54353       0.12856     TRUE
[a+b+c] = X1+X2      20   0.99194       0.83084     TRUE
Individual fractions                                    
[a] = X1|X2          10                 0.70228     TRUE
[b]                   0                -0.61375    FALSE
[c] = X2|X1           8                 0.74231     TRUE
[d] = Residuals                         0.16916    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
[1] "Analysis for non-core OTUs"
[1] "Variance partitioning - non-core OTUs"
Warning messages:
1: collinearity detected in X2: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X2: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 93972 
            Variance: 3915.5 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.60767       0.05840     TRUE
[b+c] = X2           16   0.67443       0.02328     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           8                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          10                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 81778 
            Variance: 3894.2 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           10   0.47911       0.00557     TRUE
[b+c] = X2           12   0.64178       0.16414     TRUE
[a+b+c] = X1+X2      20   0.98782       0.74422     TRUE
Individual fractions                                    
[a] = X1|X2           8                 0.58007     TRUE
[b]                   0                -0.57450    FALSE
[c] = X2|X1          10                 0.73864     TRUE
[d] = Residuals                         0.25578    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - non-core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         3915.5086     1.0000     
Constrained   2640.7243     0.6744   16
Unconstrained 1274.7843     0.3256    8
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
489.4 296.6 242.4 223.6 187.3 173.7 148.6 136.6 128.1 121.7 116.0  97.5  85.8 
RDA14 RDA15 RDA16 
 82.2  64.2  47.0 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8 
294.14 194.02 174.32 163.30 155.45 141.02  94.22  58.32 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         3894.1981     1.0000     
Constrained   2499.2037     0.6418   12
Unconstrained 1394.9944     0.3582    9
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
572.8 265.9 241.2 214.9 205.6 182.4 176.9 163.0 153.4 138.1 102.9  82.0 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8    PC9 
285.77 219.76 194.10 180.81 163.58 158.44  76.75  69.56  46.24 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    16   2640.7 1.0358  0.333
Residual  8   1274.8              

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)   
Model    12   2499.2 1.3437  0.002 **
Residual  9   1395.0                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.6744269

$`Month 5`$adj.r.squared
[1] 0.02328067


$`Month 4`
$`Month 4`$r.squared
[1] 0.6417762

$`Month 4`$adj.r.squared
[1] 0.1641445


[1] "Testing with partial RDA (fraction [a]) - non-core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         3915.5086     1.0000     
Conditional   2379.3250     0.6077   14
Constrained   1536.1836     0.3923   10
Unconstrained    0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 
358.2 250.2 189.8 158.3 140.8 113.2 101.8  94.1  72.7  57.1 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         3.894e+03  1.000e+00     
Conditional   1.866e+03  4.791e-01   10
Constrained   1.981e+03  5.087e-01   10
Unconstrained 4.743e+01  1.218e-02    1
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 
531.4 242.8 230.6 191.1 182.4 165.0 143.6 131.8  93.0  69.3 

Eigenvalues for unconstrained axes:
  PC1 
47.43 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    10   1536.2         
Residual  0      0.0         

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance      F Pr(>F)   
Model    10  1981.02 4.1766  0.005 **
Residual  1    47.43                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.3923331

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.5087101

$`Month 4`$adj.r.squared
[1] 0.738645


[1] "Spatial variables - non-core OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  5.840057e-02
+ PCNM1          1.639398e-02
+ PCNM3          9.536098e-03
+ PCNM12         7.903551e-03
+ PCNM14         4.656361e-03
+ PCNM4          3.464742e-03
+ PCNM13         1.374634e-03
+ PCNM2          9.307331e-04
+ PCNM5          4.876799e-04
<none>           0.000000e+00
+ PCNM11        -9.536992e-05
+ PCNM10        -1.543411e-03
+ PCNM6         -3.087692e-03
+ PCNM8         -3.715264e-03
+ PCNM9         -4.468386e-03
+ PCNM7         -6.446103e-03

        Df    AIC   F Pr(>F)  
+ PCNM1  1 208.32 1.4  0.052 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
+ PCNM1          0.0096951269
+ PCNM4          0.0084512455
+ PCNM10         0.0062563078
+ PCNM6          0.0060544764
<All variables>  0.0055733475
+ PCNM3          0.0042883843
<none>           0.0000000000
+ PCNM8         -0.0009236237
+ PCNM7         -0.0033875883
+ PCNM2         -0.0035966755
+ PCNM9         -0.0055159545
+ PCNM5         -0.0182563576

$`Month 5`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            3916     
Unconstrained    3916   24
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
614.2 320.5 273.3 263.5 208.6 202.2 185.2 175.1 
(Showing 8 of 24 unconstrained eigenvalues)


$`Month 4`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            3894     
Unconstrained    3894   21
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
649.0 325.6 269.6 232.9 221.1 215.1 209.1 190.6 
(Showing 8 of 21 unconstrained eigenvalues)


[1] "Summary of spatial selection process - non-core OTU"
$`Month 5`
NULL

$`Month 4`
NULL

[1] "ANOVA on full spatial selection - non-core OTU"
$`Month 5`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 24   3915.5          

$`Month 4`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 21   3894.2          

[1] "Partition Bray-Curtis dissimilarities - non-core OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X1: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 30.196 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           16   0.71701       0.15104     TRUE
[b+c] = X2           14   0.64823       0.15576     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          10                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           8                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 22.765 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12  -0.52259      -2.55272     TRUE
[b+c] = X2           10   0.02203      -0.86702     TRUE
[a+b+c] = X1+X2      20   0.96972       0.36419     TRUE
Individual fractions                                    
[a] = X1|X2          10                 1.23121     TRUE
[b]                   0                -3.78393    FALSE
[c] = X2|X1           8                 2.91690     TRUE
[d] = Residuals                         0.63581    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
[1] "Analysis for All OTUs"
[1] "Variance partitioning - All OTUs"
Warning messages:
1: collinearity detected in X2: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X2: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 102043 
            Variance: 4251.8 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.60818       0.05964     TRUE
[b+c] = X2           16   0.67707       0.03122     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           8                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          10                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 88342 
            Variance: 4206.8 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           10   0.48263       0.01229     TRUE
[b+c] = X2           12   0.64142       0.16331     TRUE
[a+b+c] = X1+X2      20   0.98793       0.74648     TRUE
Individual fractions                                    
[a] = X1|X2           8                 0.58317     TRUE
[b]                   0                -0.57088    FALSE
[c] = X2|X1          10                 0.73419     TRUE
[d] = Residuals                         0.25352    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - all OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         4251.8008     1.0000     
Constrained   2878.7850     0.6771   16
Unconstrained 1373.0158     0.3229    8
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
516.2 327.9 264.7 252.7 206.3 186.6 163.6 153.3 140.9 130.7 128.4 105.1  92.1 
RDA14 RDA15 RDA16 
 87.0  71.5  51.8 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8 
306.23 211.36 186.36 174.45 168.99 153.27 106.28  66.07 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         4206.7741     1.0000     
Constrained   2698.3045     0.6414   12
Unconstrained 1508.4696     0.3586    9
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
593.7 293.4 261.4 237.3 222.0 201.9 190.8 175.3 165.4 149.3 116.7  91.1 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8    PC9 
313.18 232.83 208.51 193.37 180.22 169.41  86.62  75.13  49.19 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    16   2878.8 1.0483  0.301
Residual  8   1373.0              

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)   
Model    12   2698.3 1.3416  0.002 **
Residual  9   1508.5                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.6770743

$`Month 5`$adj.r.squared
[1] 0.03122285


$`Month 4`
$`Month 4`$r.squared
[1] 0.6414189

$`Month 4`$adj.r.squared
[1] 0.1633108


[1] "Testing with partial RDA (fraction [a]) - all OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         4251.8008     1.0000     
Conditional   2585.8776     0.6082   14
Constrained   1665.9232     0.3918   10
Unconstrained    0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 
371.0 274.2 211.9 174.3 154.4 124.9 110.9 102.8  80.2  61.2 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         4.207e+03  1.000e+00     
Conditional   2.030e+03  4.826e-01   10
Constrained   2.126e+03  5.053e-01   10
Unconstrained 5.079e+01  1.207e-02    1
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 
550.8 266.9 247.4 202.9 197.4 178.0 155.3 145.5 104.4  77.1 

Eigenvalues for unconstrained axes:
  PC1 
50.79 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    10   1665.9         
Residual  0      0.0         

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance      F Pr(>F)  
Model    10  2125.68 4.1856  0.014 *
Residual  1    50.79                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.3918159

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.5052992

$`Month 4`$adj.r.squared
[1] 0.7341889


[1] "Forward selection for parsimonious model - all OTUs"
[1] "Spatial variables - all OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  0.0596418282
+ PCNM1          0.0163446837
+ PCNM3          0.0099054496
+ PCNM12         0.0087011081
+ PCNM14         0.0045683822
+ PCNM4          0.0021641146
+ PCNM2          0.0017285247
+ PCNM5          0.0008249218
+ PCNM13         0.0006819388
<none>           0.0000000000
+ PCNM11        -0.0005430937
+ PCNM10        -0.0011472787
+ PCNM6         -0.0027166522
+ PCNM9         -0.0038191057
+ PCNM8         -0.0041349787
+ PCNM7         -0.0066267850

        Df    AIC      F Pr(>F)  
+ PCNM1  1 210.38 1.3988  0.034 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0.01634468 
Call: x ~ PCNM1 
 
                R2.adjusted
<All variables>  0.05964183
+ PCNM3          0.02744332
+ PCNM12         0.02618424
+ PCNM14         0.02186366
+ PCNM4          0.01935011
+ PCNM2          0.01889472
+ PCNM5          0.01795004
+ PCNM13         0.01780056
+ PCNM11         0.01651984
<none>           0.01634468
+ PCNM10         0.01588820
+ PCNM6          0.01424749
+ PCNM9          0.01309492
+ PCNM8          0.01276469
+ PCNM7          0.01015962

        Df    AIC      F Pr(>F)
+ PCNM3  1 210.99 1.2625  0.106

Step: R2.adj= 0 
Call: x ~ 1 
 
                 R2.adjusted
<All variables>  0.012290530
+ PCNM1          0.011140658
+ PCNM4          0.008497962
+ PCNM6          0.006242558
+ PCNM10         0.005360343
+ PCNM3          0.004291445
<none>           0.000000000
+ PCNM8         -0.001229978
+ PCNM2         -0.002144203
+ PCNM7         -0.002470542
+ PCNM9         -0.005017476
+ PCNM5         -0.017910976

        Df    AIC      F Pr(>F)
+ PCNM1  1 185.24 1.2366  0.114

$`Month 5`
Call: rda(formula = x ~ PCNM1, data = data)

                Inertia Proportion Rank
Total         4.252e+03  1.000e+00     
Constrained   2.438e+02  5.733e-02    1
Unconstrained 4.008e+03  9.427e-01   23
Inertia is variance 

Eigenvalues for constrained axes:
  RDA1 
243.76 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
626.7 334.7 308.9 234.6 226.7 220.9 191.4 184.3 
(Showing 8 of 23 unconstrained eigenvalues)


$`Month 4`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            4207     
Unconstrained    4207   21
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
673.1 355.8 295.7 261.0 238.0 234.4 226.4 207.6 
(Showing 8 of 21 unconstrained eigenvalues)


[1] "Summary of spatial selection process - all OTU"
$`Month 5`
                  R2.adj Df    AIC      F Pr(>F)  
+ PCNM1         0.016345  1 210.38 1.3988  0.034 *
<All variables> 0.059642                          
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 4`
NULL

[1] "ANOVA on full spatial selection - all OTU"
$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ PCNM1, data = data)
         Df Variance      F Pr(>F)  
Model     1    243.8 1.3988  0.055 .
Residual 23   4008.0                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 4`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 21   4206.8          

[1] "Partition Bray-Curtis dissimilarities - all OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 17, m = 16 
2: collinearity detected in cbind(X1,X2): mm = 31, m = 24 
3: collinearity detected in X1: mm = 13, m = 12 
4: collinearity detected in cbind(X1,X2): mm = 23, m = 20 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 22.524 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           16   0.77261       0.31783     TRUE
[b+c] = X2           14   0.58494       0.00386     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          10                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           8                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 16.881 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12  -0.09657      -1.55866     TRUE
[b+c] = X2           10   0.23893      -0.45294     TRUE
[a+b+c] = X1+X2      20   0.97337       0.44081     TRUE
Individual fractions                                    
[a] = X1|X2          10                 0.89376     TRUE
[b]                   0                -2.45242    FALSE
[c] = X2|X1           8                 1.99947     TRUE
[d] = Residuals                         0.55919    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning messages:
1: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
2: collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
