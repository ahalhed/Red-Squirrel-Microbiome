Unloading StdEnv/2020

The following have been reloaded with a version change:
  1) gcccore/.9.3.0 => gcccore/.7.3.0     2) imkl/2020.1.217 => imkl/2018.3.222

[1] "Set up (working directory, theme, and packages)"
Loading required package: permute
Loading required package: lattice
This is vegan 2.5-6
Loading required package: MASS
Loading required package: NADA
Loading required package: survival

Attaching package: ‘NADA’

The following object is masked from ‘package:stats’:

    cor

Loading required package: truncnorm
Loading required package: ALDEx2
Loading required package: car
Loading required package: carData
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.1     ✔ dplyr   1.0.0
✔ tidyr   1.1.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ dplyr::recode() masks car::recode()
✖ dplyr::select() masks MASS::select()
✖ purrr::some()   masks car::some()
[1] "Initiate functions for analysis"
[1] "Read in the Data"
[1] "Building phyloseq object"
[1] "Read in the metadata"
[1] "Aitchison transformation"
No. corrected values:  19086552 
[1] "Extract Core"
[1] "Subset the OTU table to find core and non-core OTUs"
[1] "Accessing the XY data by month"
[1] "Months in this Grid"
[1] 5 4
[1] "Computing Euclidean Distances"
[1] "Maximum Euclidean Distance by Month"
$`Month 5`
[1] 30.60229

$`Month 4`
[1] 30.64719

Warning message:
`summarise_each_()` is deprecated as of dplyr 0.7.0.
Please use `across()` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_warnings()` to see where this warning was generated. 
[1] "Build the community object (OTU table) for grid/year/month"
[1] "Extract metadata for grid/year/month"
[1] "Removing pobjects that are no longer needed"
[1] "Unweighted PCNM - for use with all OTU tables"
                              PCNM1        PCNM2        PCNM3        PCNM4
P1109.10338.F.1.LL.2008  0.13904618 -0.059654406 -0.244359026  0.489710167
P2964.10346.F.1.LL.2008  0.26436152  0.154257654  0.267040229 -0.202973102
P1610.10338.F.1.LL.2008  0.20585061 -0.050366833 -0.132880069  0.325595109
P3126.10395.F.1.LL.2008 -0.15491126 -0.372854379  0.127272810 -0.013974297
P2917.8445.F.3.LL.2008   0.16940062 -0.033972714 -0.019203350  0.038336820
P1810.8510.F.1.LL.2008   0.33749133  0.011035950  0.198871730 -0.204973781
P1679.8685.F.2.LL.2008  -0.10284410  0.323120809  0.221564690  0.137194544
P3086.10187.F.2.LL.2008 -0.28619968 -0.156731554  0.047877663 -0.194696082
P1747.11208.F.1.LL.2008  0.09507653 -0.048819085 -0.202593770  0.370129410
P1189.8469.F.2.LL.2008  -0.22188617 -0.330539317  0.164515014 -0.007616995
P1495.10699.F.1.LL.2008 -0.16384472  0.291331379  0.137302317  0.218829393
P1739.8510.F.1.LL.2008   0.33749133  0.011035950  0.198871730 -0.204973781
P1602.10413.F.1.LL.2008 -0.21209022  0.329308107 -0.001292332 -0.150948177
P0937.8529.F.3.LL.2008  -0.31184511  0.204251644  0.120047862  0.023628271
P1492.8655.F.1.LL.2008   0.05042465 -0.009786367 -0.329124604 -0.106621693
P1391.10699.F.1.LL.2008 -0.16384472  0.291331379  0.137302317  0.218829393
P1682.13673.F.2.LL.2008 -0.17615719  0.095844814 -0.248231761 -0.297754449
P1814.10334.F.1.LL.2008 -0.02205467  0.079271121 -0.509214535 -0.309408136
P1769.10393.F.1.LL.2008 -0.09263773 -0.337125112  0.110880137  0.057326207
P1554.10372.F.1.LL.2008 -0.15584509 -0.373894741  0.127846337 -0.014586806
P1358.10640.F.1.LL.2008  0.41441433 -0.006609112  0.149641895 -0.069817956
P1069.8393.F.2.LL.2008   0.05060353 -0.010435188 -0.322135283 -0.101234059
                               PCNM5       PCNM6       PCNM7         PCNM8
P1109.10338.F.1.LL.2008 -0.218060966  0.25360367  0.06394157 -1.559847e-16
P2964.10346.F.1.LL.2008  0.041899057  0.29810968  0.12844029 -5.372525e-16
P1610.10338.F.1.LL.2008 -0.242789852 -0.20325826  0.63467473 -2.138586e-02
P3126.10395.F.1.LL.2008  0.105118379  0.03402784  0.06431458 -3.184471e-16
P2917.8445.F.3.LL.2008  -0.038696272 -0.64081034 -0.45226220  2.110708e-02
P1810.8510.F.1.LL.2008  -0.021633894  0.18525504 -0.10124373  3.837909e-16
P1679.8685.F.2.LL.2008   0.211776415  0.08312892  0.09895469 -3.745919e-16
P3086.10187.F.2.LL.2008 -0.412811079  0.02954201 -0.02495365 -1.227061e-16
P1747.11208.F.1.LL.2008 -0.100962449  0.38026466 -0.52762757  2.107251e-02
P1189.8469.F.2.LL.2008  -0.009394038 -0.02732845 -0.03158442  4.241367e-16
P1495.10699.F.1.LL.2008  0.192267983 -0.11533430 -0.03121401  1.145329e-16
P1739.8510.F.1.LL.2008  -0.021633894  0.18525504 -0.10124373  3.798987e-16
P1602.10413.F.1.LL.2008 -0.091484126  0.10393529  0.13122739 -5.147899e-16
P0937.8529.F.3.LL.2008  -0.230659983 -0.10243920 -0.10596486  5.747267e-16
P1492.8655.F.1.LL.2008   0.303866141 -0.03794703  0.02060583  6.961571e-01
P1391.10699.F.1.LL.2008  0.192267983 -0.11533430 -0.03121401  3.588551e-16
P1682.13673.F.2.LL.2008 -0.410353420  0.01277155 -0.02269697 -9.994329e-18
P1814.10334.F.1.LL.2008  0.202078746  0.01041848  0.09429278 -9.507221e-17
P1769.10393.F.1.LL.2008  0.302838214  0.01601069  0.08756506 -1.417565e-16
P1554.10372.F.1.LL.2008  0.103861922  0.03417302  0.06434197 -1.598545e-16
P1358.10640.F.1.LL.2008 -0.155683435 -0.34557170  0.06939230  2.151896e-17
P1069.8393.F.2.LL.2008   0.298188566 -0.03847230 -0.02774603 -7.169508e-01
                               PCNM9      PCNM10       PCNM11        PCNM12
P1109.10338.F.1.LL.2008 -0.031742066  0.01160609  0.016679982  9.395881e-05
P2964.10346.F.1.LL.2008 -0.373013761  0.21381692  0.198568467 -1.071651e-04
P1610.10338.F.1.LL.2008  0.077930753  0.01325512  0.004028025 -2.723016e-05
P3126.10395.F.1.LL.2008 -0.128912388  0.03121717 -0.309412722  7.105059e-01
P2917.8445.F.3.LL.2008  -0.352602680  0.03826439  0.031892114  7.526449e-05
P1810.8510.F.1.LL.2008   0.303957367 -0.12660593 -0.107107234  8.937413e-05
P1679.8685.F.2.LL.2008  -0.255702603  0.25928770  0.229707864  4.244645e-03
P3086.10187.F.2.LL.2008 -0.007753049  0.32618962 -0.288461146 -3.551995e-03
P1747.11208.F.1.LL.2008 -0.114507155 -0.01274065  0.007025481 -9.540735e-04
P1189.8469.F.2.LL.2008   0.229545927  0.19859188  0.444910016 -8.308714e-04
P1495.10699.F.1.LL.2008  0.179592729 -0.15513896 -0.266643453 -2.055983e-03
P1739.8510.F.1.LL.2008   0.303957367 -0.12660593 -0.107107234  8.937413e-05
P1602.10413.F.1.LL.2008 -0.334275773 -0.10206795 -0.127039195 -4.400752e-03
P0937.8529.F.3.LL.2008   0.352233424  0.08278495  0.353508412  3.555113e-03
P1492.8655.F.1.LL.2008   0.181870868  0.28324716  0.012079956  4.076813e-05
P1391.10699.F.1.LL.2008  0.179592729 -0.15513896 -0.266643453 -2.055983e-03
P1682.13673.F.2.LL.2008 -0.049531263 -0.39153309  0.112257636  4.299312e-03
P1814.10334.F.1.LL.2008 -0.052596614 -0.12430770  0.013562663 -9.168369e-04
P1769.10393.F.1.LL.2008 -0.125317285 -0.56100841  0.340450535 -3.513143e-03
P1554.10372.F.1.LL.2008 -0.128457903  0.03373663 -0.307081813 -7.036164e-01
P1358.10640.F.1.LL.2008 -0.014793875 -0.01223883  0.002070252 -9.778502e-04
P1069.8393.F.2.LL.2008   0.160525248  0.27538879  0.012754847  1.457179e-05
                              PCNM1       PCNM2       PCNM3       PCNM4
P1006.8608.F.4.LL.2008   0.16983804  0.36563070 -0.04985443 -0.11160639
P0936.8643.F.1.LL.2008   0.17549418 -0.30623823  0.01007114  0.25154238
P1401.13668.F.1.LL.2008  0.18734611  0.29172622  0.06688318 -0.24655619
P1379.10640.F.1.LL.2008 -0.12883871 -0.21556655 -0.52970411 -0.30571659
P1011.10429.F.1.LL.2008 -0.23377340  0.04040759  0.17156443  0.11489261
P1275.10200.F.3.LL.2008  0.20949878 -0.10513216  0.02190514  0.06772681
P1117.12049.F.1.LL.2008  0.09959154 -0.36192619 -0.37733812  0.35198202
P1294.10200.F.3.LL.2008  0.20949878 -0.10513216  0.02190514  0.06772681
P1350.10395.F.1.LL.2008  0.15206216  0.31529387 -0.22795962  0.29488372
P1113.10334.F.1.LL.2008  0.16897666 -0.18926267  0.27072541 -0.22820324
P1357.8700.F.1.LL.2008  -0.23377340  0.04040759  0.17156443  0.11489261
P1038.7920.F.1.LL.2008   0.18492354 -0.07577660  0.25289273 -0.28450225
P1019.10929.F.1.LL.2008 -0.18850033  0.07518883  0.27602052  0.36306069
P1126.8700.F.1.LL.2008  -0.23377340  0.04040759  0.17156443  0.11489261
P1147.8397.F.5.LL.2008  -0.24565914 -0.03103952 -0.03761413 -0.06071965
P0959.10278.F.1.LL.2008 -0.22296402 -0.05664964 -0.15064202 -0.25281021
P1112.8258.F.6.LL.2008  -0.23350426  0.04083116  0.17285712  0.11755514
P1122.8643.F.1.LL.2008   0.20898759 -0.10505492  0.01831437  0.07366990
P1007.10393.F.1.LL.2008  0.05941943  0.53812025 -0.26029753  0.03153679
P1336.10338.F.1.LL.2008 -0.24516074 -0.02569347 -0.01974520 -0.03866293
P1257.10278.F.1.LL.2008 -0.22296402 -0.05664964 -0.15064202 -0.25281021
P1035.10338.F.1.LL.2008 -0.24516074 -0.02569347 -0.01974520 -0.03866293
P1262.8686.F.1.LL.2008   0.21452421  0.09263296 -0.07393278  0.06672087
P1009.10200.F.3.LL.2008  0.20898759 -0.10505492  0.01831437  0.07366990
P1156.8529.F.3.LL.2008   0.18492354 -0.07577660  0.25289273 -0.28450225
                              PCNM5        PCNM6       PCNM7       PCNM8
P1006.8608.F.4.LL.2008  -0.05761085  0.498166795 -0.18850398  0.23071114
P0936.8643.F.1.LL.2008   0.21207224 -0.320954933  0.09041847  0.50438174
P1401.13668.F.1.LL.2008 -0.10432879 -0.035451036  0.17939343 -0.48884294
P1379.10640.F.1.LL.2008 -0.32100135  0.005292106  0.16305090  0.06934837
P1011.10429.F.1.LL.2008  0.13647293  0.015730884 -0.13014506 -0.08227756
P1275.10200.F.3.LL.2008  0.05909154  0.176378538  0.08002412 -0.12002119
P1117.12049.F.1.LL.2008 -0.17574287  0.068772750 -0.39151090 -0.29070469
P1294.10200.F.3.LL.2008  0.05909154  0.176378538  0.08002412 -0.12002119
P1350.10395.F.1.LL.2008  0.31474725  0.012833406  0.51970172  0.12699736
P1113.10334.F.1.LL.2008 -0.03423032 -0.483604627  0.20508520 -0.28031159
P1357.8700.F.1.LL.2008   0.13647293  0.015730884 -0.13014506 -0.08227756
P1038.7920.F.1.LL.2008  -0.09048022  0.064016171 -0.14620051  0.27388781
P1019.10929.F.1.LL.2008 -0.52382245  0.013883846  0.14197441  0.05652268
P1126.8700.F.1.LL.2008   0.13647293  0.015730884 -0.13014506 -0.08227756
P1147.8397.F.5.LL.2008  -0.14266624  0.019809288  0.17809364  0.09929293
P0959.10278.F.1.LL.2008  0.35004955 -0.001225676 -0.07662072 -0.02907959
P1112.8258.F.6.LL.2008   0.13170682  0.015458596 -0.13123687 -0.08361945
P1122.8643.F.1.LL.2008   0.06257647  0.180991570  0.08081260 -0.11621502
P1007.10393.F.1.LL.2008 -0.11268479 -0.425944257 -0.23728625  0.05476600
P1336.10338.F.1.LL.2008 -0.15344293  0.021222415  0.16607426  0.08766717
P1257.10278.F.1.LL.2008  0.35004955 -0.001225676 -0.07662072 -0.02907959
P1035.10338.F.1.LL.2008 -0.15344293  0.021222415  0.16607426  0.08766717
P1262.8686.F.1.LL.2008  -0.05144627 -0.298220623 -0.34692410  0.05581275
P1009.10200.F.3.LL.2008  0.06257647  0.180991570  0.08081260 -0.11621502
P1156.8529.F.3.LL.2008  -0.09048022  0.064016171 -0.14620051  0.27388781
                                PCNM9        PCNM10        PCNM11
P1006.8608.F.4.LL.2008   5.764275e-05 -7.415659e-05  8.186210e-04
P0936.8643.F.1.LL.2008   4.334282e-03 -2.404536e-03  2.977274e-03
P1401.13668.F.1.LL.2008 -2.634125e-04  9.323770e-05 -2.233763e-03
P1379.10640.F.1.LL.2008  8.719412e-03 -4.811337e-03 -1.374871e-05
P1011.10429.F.1.LL.2008  1.629709e-02  2.886087e-01  2.300103e-03
P1275.10200.F.3.LL.2008 -2.606033e-04 -2.240405e-03  5.001690e-01
P1117.12049.F.1.LL.2008 -4.385882e-03  2.354383e-03  2.760164e-03
P1294.10200.F.3.LL.2008 -2.606033e-04 -2.240405e-03  5.001690e-01
P1350.10395.F.1.LL.2008  4.610263e-03 -2.537005e-03  5.731501e-03
P1113.10334.F.1.LL.2008  6.213556e-06  4.898982e-05 -7.121814e-03
P1357.8700.F.1.LL.2008   1.629709e-02  2.886087e-01  2.300103e-03
P1038.7920.F.1.LL.2008   2.104860e-03 -1.188429e-03 -3.844430e-04
P1019.10929.F.1.LL.2008 -4.063561e-02 -3.944026e-03 -2.509119e-05
P1126.8700.F.1.LL.2008   1.629709e-02  2.886087e-01  2.300103e-03
P1147.8397.F.5.LL.2008  -7.976872e-01  5.658595e-02  9.203069e-04
P0959.10278.F.1.LL.2008 -6.380171e-03 -6.370983e-03 -2.237907e-05
P1112.8258.F.6.LL.2008  -5.537098e-02 -8.636609e-01 -4.137899e-03
P1122.8643.F.1.LL.2008  -1.849112e-03  3.408955e-03 -4.997552e-01
P1007.10393.F.1.LL.2008 -3.476548e-04  8.641868e-05 -1.354280e-03
P1336.10338.F.1.LL.2008  4.230525e-01 -2.001919e-02 -1.448730e-03
P1257.10278.F.1.LL.2008 -6.380171e-03 -6.370983e-03 -2.237907e-05
P1035.10338.F.1.LL.2008  4.230525e-01 -2.001919e-02 -1.448730e-03
P1262.8686.F.1.LL.2008  -1.263175e-03  5.256867e-03 -2.338097e-03
P1009.10200.F.3.LL.2008 -1.849112e-03  3.408955e-03 -4.997552e-01
P1156.8529.F.3.LL.2008   2.104860e-03 -1.188429e-03 -3.844430e-04
[1] "Acessing PCNM scores"
[1] "Analysis for Core OTUs"
[1] "Variance partitioning - Core OTUs"
Warning messages:
1: collinearity detected in X2: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X2: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 621.7 
            Variance: 29.605 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12   0.60562       0.07977     TRUE
[b+c] = X2           14   0.58954      -0.23138     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           7                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           9                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 640.07 
            Variance: 26.67 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           11   0.50686       0.08959     TRUE
[b+c] = X2           13   0.64593       0.22748     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          11                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          13                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

              Inertia Proportion Rank
Total         29.6050     1.0000     
Constrained   17.4533     0.5895   12
Unconstrained 12.1516     0.4105    7
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
5.566 3.039 2.705 1.952 1.474 0.878 0.776 0.437 0.342 0.219 0.038 0.026 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7 
3.906 3.424 2.067 1.658 0.722 0.285 0.090 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

              Inertia Proportion Rank
Total         26.6695     1.0000     
Constrained   17.2266     0.6459   12
Unconstrained  9.4430     0.3541   11
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
7.664 3.402 1.933 1.570 1.037 0.595 0.425 0.393 0.086 0.078 0.036 0.007 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8   PC9  PC10  PC11 
4.827 2.253 0.906 0.576 0.342 0.193 0.153 0.149 0.033 0.007 0.003 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    14   17.453 0.7181  0.955
Residual  7   12.152              

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)  
Model    13   17.227 1.5436  0.073 .
Residual 11    9.443                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
$`Month 5`$r.squared
[1] 0.5895411

$`Month 5`$adj.r.squared
[1] -0.2313768


$`Month 4`
$`Month 4`$r.squared
[1] 0.6459272

$`Month 4`$adj.r.squared
[1] 0.2274775


[1] "Testing with partial RDA (fraction [a]) - core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

              Inertia Proportion Rank
Total         29.6050     1.0000     
Conditional   17.9293     0.6056   12
Constrained   11.6757     0.3944    9
Unconstrained  0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 
4.316 2.328 1.549 1.152 1.064 0.533 0.493 0.203 0.037 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

              Inertia Proportion Rank
Total         26.6695     1.0000     
Conditional   13.5178     0.5069   11
Constrained   13.1517     0.4931   12
Unconstrained  0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 
5.004 2.659 2.113 1.226 0.858 0.566 0.270 0.224 0.150 0.062 0.021 0.000 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model     9   11.676         
Residual  0    0.000         

$`Month 4`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    13   13.152         
Residual  0    0.000         

$`Month 5`
$`Month 5`$r.squared
[1] 0.3943835

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.493137

$`Month 4`$adj.r.squared
[1] NA


[1] "Spatial variables - core OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                 R2.adjusted
<All variables>  0.079771872
+ PCNM12         0.033729675
+ PCNM10         0.028149368
+ PCNM8          0.021307633
+ PCNM5          0.005756593
+ PCNM1          0.004566815
+ PCNM3          0.003863491
+ PCNM6          0.001763400
<none>           0.000000000
+ PCNM11        -0.005419800
+ PCNM4         -0.006934530
+ PCNM9         -0.007798389
+ PCNM7         -0.020910205
+ PCNM2         -0.022176708

         Df    AIC     F Pr(>F)  
+ PCNM12  1 75.683 1.733  0.058 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0 
Call: x ~ 1 
 
                 R2.adjusted
<All variables>  0.089593154
+ PCNM4          0.038227417
+ PCNM6          0.034134825
+ PCNM1          0.021631348
+ PCNM3          0.015400816
+ PCNM11         0.012843401
+ PCNM2          0.001845182
<none>           0.000000000
+ PCNM5         -0.004044368
+ PCNM7         -0.009285485
+ PCNM8         -0.017107517
+ PCNM10        -0.021352616
+ PCNM9         -0.021653395

        Df    AIC      F Pr(>F)  
+ PCNM4  1 83.029 1.9539  0.088 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            29.6     
Unconstrained    29.6   12
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8   PC9  PC10  PC11  PC12 
8.699 5.040 3.728 2.685 2.555 1.990 1.563 1.220 0.978 0.687 0.350 0.111 


$`Month 4`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total           26.67     
Unconstrained   26.67   12
Inertia is variance 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8    PC9   PC10   PC11 
10.597  4.929  3.396  2.149  1.609  1.401  0.919  0.641  0.362  0.352  0.206 
  PC12 
 0.110 


[1] "Summary of spatial selection process - core OTU"
$`Month 5`
NULL

$`Month 4`
NULL

[1] "ANOVA on full spatial selection - core OTU"
$`Month 5`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0    0.000  0       
Residual 21   29.605          

$`Month 4`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0    0.000  0       
Residual 24   26.669          

[1] "Partition Bray-Curtis dissimilarities - core OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X1: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 2.2573 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.59133      -0.22601     TRUE
[b+c] = X2           12   0.63991       0.15980     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           9                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           7                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 5.805 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           13   0.71790       0.38450     TRUE
[b+c] = X2           11   0.63094       0.31866     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          13                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          11                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
[1] "Analysis for non-core OTUs"
[1] "Variance partitioning - non-core OTUs"
Warning messages:
1: collinearity detected in X2: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X2: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 88179 
            Variance: 4199 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12   0.61360       0.09840     TRUE
[b+c] = X2           14   0.66049      -0.01852     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           7                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           9                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 94289 
            Variance: 3928.7 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           11   0.47604       0.03268     TRUE
[b+c] = X2           13   0.56783       0.05709     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          11                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          13                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - non-core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         4199.0224     1.0000     
Constrained   2773.4248     0.6605   14
Unconstrained 1425.5976     0.3395    7
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
687.0 281.6 239.3 224.2 198.1 188.1 181.9 161.9 139.8 131.7 113.7  94.1  67.7 
RDA14 
 64.4 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7 
277.31 240.45 225.78 224.37 181.88 164.21 111.60 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         3928.7292     1.0000     
Constrained   2230.8692     0.5678   13
Unconstrained 1697.8600     0.4322   11
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
439.2 252.5 239.4 208.7 188.6 165.5 147.2 134.8 114.8 109.8 100.3  71.9  58.3 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8   PC9  PC10  PC11 
372.4 215.2 207.4 189.0 164.1 112.6 107.7 100.2  86.4  75.1  67.6 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    14   2773.4 0.9727  0.582
Residual  7   1425.6              

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    13   2230.9 1.1118  0.167
Residual 11   1697.9              

$`Month 5`
$`Month 5`$r.squared
[1] 0.660493

$`Month 5`$adj.r.squared
[1] -0.01852109


$`Month 4`
$`Month 4`$r.squared
[1] 0.5678348

$`Month 4`$adj.r.squared
[1] 0.05709415


[1] "Testing with partial RDA (fraction [a]) - non-core OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         4199.0224     1.0000     
Conditional   2576.5203     0.6136   12
Constrained   1622.5021     0.3864    9
Unconstrained    0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 
373.2 197.6 188.9 177.8 168.5 156.7 139.4 118.9 101.6 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

               Inertia Proportion Rank
Total         3928.729      1.000     
Conditional   1870.216      0.476   11
Constrained   2058.514      0.524   13
Unconstrained    0.000      0.000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
455.5 223.8 195.7 190.1 171.6 144.3 130.0 116.1 109.8 100.8  90.1  81.1  49.6 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model     9   1622.5         
Residual  0      0.0         

$`Month 4`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    13   2058.5         
Residual  0      0.0         

$`Month 5`
$`Month 5`$r.squared
[1] 0.3864

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.5239643

$`Month 4`$adj.r.squared
[1] NA


[1] "Spatial variables - non-core OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  9.840009e-02
+ PCNM9          1.636685e-02
+ PCNM3          1.388798e-02
+ PCNM10         1.277781e-02
+ PCNM4          1.021794e-02
+ PCNM12         7.734123e-03
+ PCNM2          3.580104e-03
+ PCNM8          3.316894e-03
+ PCNM6          9.624783e-05
<none>           0.000000e+00
+ PCNM1         -1.071813e-03
+ PCNM5         -3.868191e-03
+ PCNM11        -7.423789e-03
+ PCNM7         -1.133412e-02

        Df    AIC      F Pr(>F)  
+ PCNM9  1 185.08 1.3494  0.062 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  0.0326813695
+ PCNM10         0.0220254723
+ PCNM1          0.0121500298
+ PCNM9          0.0077026281
+ PCNM7          0.0003221876
<none>           0.0000000000
+ PCNM4         -0.0016946226
+ PCNM5         -0.0017820910
+ PCNM11        -0.0018622401
+ PCNM3         -0.0029616524
+ PCNM2         -0.0036007945
+ PCNM6         -0.0052176367
+ PCNM8         -0.0066092019

         Df    AIC      F Pr(>F)  
+ PCNM10  1 208.26 1.5405  0.064 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            4199     
Unconstrained    4199   21
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
756.6 336.8 282.9 257.2 236.9 219.2 212.6 203.6 
(Showing 8 of 21 unconstrained eigenvalues)


$`Month 4`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            3929     
Unconstrained    3929   24
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
621.7 318.9 288.6 268.5 245.4 225.9 214.8 188.3 
(Showing 8 of 24 unconstrained eigenvalues)


[1] "Summary of spatial selection process - non-core OTU"
$`Month 5`
NULL

$`Month 4`
NULL

[1] "ANOVA on full spatial selection - non-core OTU"
$`Month 5`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0        0  0       
Residual 21     4199          

$`Month 4`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 24   3928.7          

[1] "Partition Bray-Curtis dissimilarities - non-core OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X1: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 17.254 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.74034       0.22103     TRUE
[b+c] = X2           12   0.62330       0.12104     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           9                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           7                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 27.943 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           13   0.18148      -0.78585     TRUE
[b+c] = X2           11   0.53710       0.14542     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          13                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          11                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
[1] "Analysis for All OTUs"
[1] "Variance partitioning - All OTUs"
Warning messages:
1: collinearity detected in X2: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X2: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[1L]], X = dots[[2L]][[1L]], ~., data = dots[[3L]][[1L]])

Explanatory tables:
X1:  dots[[2L]][[1L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 88801 
            Variance: 4228.6 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           12   0.61354       0.09827     TRUE
[b+c] = X2           14   0.66000      -0.02001     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           7                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           9                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

$`Month 4`

Partition of variance in RDA 

Call: (function (Y, X, ..., data, chisquare = FALSE, transfo, scale =
FALSE, add = FALSE, sqrt.dist = FALSE, permutations = 1000) { if
(missing(data)) data <- parent.frame() X <- list(X, ...)  if
((length(X) < 2 || length(X) > 4)) stop("needs two to four explanatory
tables") if (inherits(Y, "dist")) { inert <- attr(Y, "method") inert <-
paste(paste0(toupper(substring(inert, 1, 1)), substring(inert, 2)),
"distance") if (sqrt.dist) Y <- sqrt(Y) else inert <- paste("squared",
inert) if (is.logical(add) && isTRUE(add)) add <- "lingoes" if
(is.character(add)) { add <- match.arg(add, c("lingoes", "cailliez"))
if (add == "lingoes") { ac <- addLingoes(as.matrix(Y)) Y <- sqrt(Y^2 +
2 * ac) } else if (add == "cailliez") { ac <- addCailliez(as.matrix(Y))
Y <- Y + ac } if (ac > sqrt(.Machine$double.eps)) inert <-
paste(paste0(toupper(substring(add, 1, 1)), substring(add, 2)),
"adjusted", inert) } RDA <- "dbRDA" if (!missing(transfo) ||
!missing(scale)) message("arguments 'transfo' and 'scale' are ignored
with distances") } else if (chisquare) { inert = "Chi-square" RDA =
"CCA" permutations = getPermuteMatrix(permutations, nrow(Y)) } else {
inert <- "variance" RDA <- "RDA" if (!missing(transfo)) { Y <-
decostand(Y, transfo) transfo <- attr(Y, "decostand") } if
(!missing(transfo) && (is.null(dim(Y)) || ncol(Y) == 1))
warning("transformations are probably meaningless with a single
variable") if (scale && !missing(transfo)) warning("Y should not be
both transformed and scaled (standardized)") Y <- scale(Y, center =
TRUE, scale = scale) } Sets <- list() for (i in seq_along(X)) { if
(is.data.frame(X[[i]]) || is.factor(X[[i]])) { mf <-
as.data.frame(X[[i]]) mf <- model.matrix(~., mf) Sets[[i]] <- mf[, -1,
drop = FALSE] } else if (inherits(X[[i]], "formula")) { mf <-
model.frame(X[[i]], data, na.action = na.fail, drop.unused.levels =
TRUE) trms <- attr(mf, "terms") Sets[[i]] <- model.matrix(trms, mf) if
(any(colnames(Sets[[i]]) == "(Intercept)")) { xint <-
which(colnames(Sets[[i]]) == "(Intercept)") Sets[[i]] <- (Sets[[i]])[,
-xint, drop = FALSE] } } else Sets[[i]] <- as.matrix(X[[i]]) Sets[[i]]
<- scale(Sets[[i]], center = TRUE, scale = TRUE) } out <- list()
out$part <- switch(length(Sets), NULL, varpart2(Y, Sets[[1]],
Sets[[2]], chisquare, permutations), varpart3(Y, Sets[[1]], Sets[[2]],
Sets[[3]], chisquare, permutations), varpart4(Y, Sets[[1]], Sets[[2]],
Sets[[3]], Sets[[4]], chisquare, permutations)) if (inherits(Y,
"dist")) { out$part$ordination <- "dbrda" } else { if (chisquare)
out$part$ordination <- "cca" else { out$part$ordination <- "rda" } } if
(RDA == "RDA") { out$scale <- scale if (!missing(transfo)) out$transfo
<- transfo } else { if (scale || !missing(transfo)) message("arguments
'scale' and 'transfo' ignored: valid only in RDA") } out$inert <- inert
out$RDA <- RDA out$call <- match.call() mx <- rep(" ", length(X)) for
(i in seq_along(X)) mx[i] <- deparse(out$call[[i + 2]], width.cutoff =
500) out$tables <- mx class(out) <- c("varpart", class(out)) out })(Y =
dots[[1L]][[2L]], X = dots[[2L]][[2L]], ~., data = dots[[3L]][[2L]])

Explanatory tables:
X1:  dots[[2L]][[2L]]
X2:  ~. 

No. of explanatory tables: 2 
Total variation (SS): 94930 
            Variance: 3955.4 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           11   0.47624       0.03307     TRUE
[b+c] = X2           13   0.56836       0.05824     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          11                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          13                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘rda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
[1] "Testing with RDA (full model) - all OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

              Inertia Proportion Rank
Total         4228.63       1.00     
Constrained   2790.88       0.66   14
Unconstrained 1437.75       0.34    7
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
688.3 283.8 241.2 225.7 200.1 189.1 183.4 162.8 140.9 133.0 114.2  95.0  68.5 
RDA14 
 64.8 

Eigenvalues for unconstrained axes:
   PC1    PC2    PC3    PC4    PC5    PC6    PC7 
279.61 242.00 228.73 226.14 184.76 164.55 111.95 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear,
data = data)

                Inertia Proportion Rank
Total         3955.3987     1.0000     
Constrained   2248.0958     0.5684   13
Unconstrained 1707.3029     0.4316   11
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
442.0 257.6 240.2 210.3 189.3 166.4 147.7 136.1 115.8 110.0 101.6  72.3  58.8 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8   PC9  PC10  PC11 
372.8 217.0 209.3 190.3 164.4 112.9 109.1 101.0  87.1  75.6  67.8 


$`Month 5`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    14   2790.9 0.9706  0.579
Residual  7   1437.8              

$`Month 4`
Permutation test for rda under reduced model
Permutation: free
Number of permutations: 999

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear, data = data)
         Df Variance      F Pr(>F)
Model    13   2248.1 1.1142   0.17
Residual 11   1707.3              

$`Month 5`
$`Month 5`$r.squared
[1] 0.6599962

$`Month 5`$adj.r.squared
[1] -0.02001131


$`Month 4`
$`Month 4`$r.squared
[1] 0.5683614

$`Month 4`$adj.r.squared
[1] 0.05824297


[1] "Testing with partial RDA (fraction [a]) - all OTUS"
$`Month 5`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         4228.6274     1.0000     
Conditional   2594.4496     0.6135   12
Constrained   1634.1778     0.3865    9
Unconstrained    0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 
374.3 199.5 189.2 179.2 171.9 157.8 140.1 119.7 102.4 


$`Month 4`
Call: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear
+ Condition(scores(y)), data = data)

                Inertia Proportion Rank
Total         3955.3987     1.0000     
Conditional   1883.7333     0.4762   11
Constrained   2071.6654     0.5238   13
Unconstrained    0.0000     0.0000    0
Inertia is variance 
Some constraints were aliased because they were collinear (redundant)

Eigenvalues for constrained axes:
 RDA1  RDA2  RDA3  RDA4  RDA5  RDA6  RDA7  RDA8  RDA9 RDA10 RDA11 RDA12 RDA13 
456.2 226.7 197.6 191.3 172.5 144.9 131.7 116.9 110.2 101.0  90.7  81.9  49.9 


$`Month 5`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model     9   1634.2         
Residual  0      0.0         

$`Month 4`
No residual component

Model: rda(formula = x ~ Age + Squirrel.ID + CollectionDate + BirthYear + Condition(scores(y)), data = data)
         Df Variance F Pr(>F)
Model    13   2071.7         
Residual  0      0.0         

$`Month 5`
$`Month 5`$r.squared
[1] 0.3864559

$`Month 5`$adj.r.squared
[1] NA


$`Month 4`
$`Month 4`$r.squared
[1] 0.5237564

$`Month 4`$adj.r.squared
[1] NA


[1] "Forward selection for parsimonious model - all OTUs"
[1] "Spatial variables - all OTU"
Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  0.0982696745
+ PCNM9          0.0161976624
+ PCNM3          0.0138177984
+ PCNM10         0.0128854313
+ PCNM4          0.0100978557
+ PCNM12         0.0079161197
+ PCNM8          0.0034428485
+ PCNM2          0.0033997782
+ PCNM6          0.0001079197
<none>           0.0000000000
+ PCNM1         -0.0010323360
+ PCNM5         -0.0038008067
+ PCNM11        -0.0074097591
+ PCNM7         -0.0114011585

        Df    AIC      F Pr(>F)  
+ PCNM9  1 185.24 1.3458  0.054 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Step: R2.adj= 0 
Call: x ~ 1 
 
                  R2.adjusted
<All variables>  0.0330651009
+ PCNM10         0.0217329927
+ PCNM1          0.0122139582
+ PCNM9          0.0075046932
+ PCNM7          0.0002574072
<none>           0.0000000000
+ PCNM4         -0.0014254457
+ PCNM11        -0.0017630863
+ PCNM5         -0.0017973446
+ PCNM3         -0.0028378423
+ PCNM2         -0.0035640747
+ PCNM6         -0.0049523002
+ PCNM8         -0.0066799875

         Df    AIC      F Pr(>F)  
+ PCNM10  1 208.44 1.5332  0.076 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

$`Month 5`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            4229     
Unconstrained    4229   21
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
758.5 340.1 284.7 259.1 238.2 222.3 214.2 205.4 
(Showing 8 of 21 unconstrained eigenvalues)


$`Month 4`
Call: rda(formula = x ~ 1, data = data)

              Inertia Rank
Total            3955     
Unconstrained    3955   24
Inertia is variance 

Eigenvalues for unconstrained axes:
  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 
623.3 320.9 296.3 269.4 247.0 227.3 215.6 189.2 
(Showing 8 of 24 unconstrained eigenvalues)


[1] "Summary of spatial selection process - all OTU"
$`Month 5`
NULL

$`Month 4`
NULL

[1] "ANOVA on full spatial selection - all OTU"
$`Month 5`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 21   4228.6          

$`Month 4`
No constrained component

Model: rda(formula = x ~ 1, data = data)
         Df Variance  F Pr(>F)
Model     0      0.0  0       
Residual 24   3955.4          

[1] "Partition Bray-Curtis dissimilarities - all OTUs"
Warning messages:
1: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
2: In FUN(X[[i]], ...) :
  results may be meaningless because data have negative entries in method “bray”
Warning messages:
1: collinearity detected in X1: mm = 15, m = 14 
2: collinearity detected in cbind(X1,X2): mm = 27, m = 21 
3: collinearity detected in X1: mm = 14, m = 13 
4: collinearity detected in cbind(X1,X2): mm = 25, m = 24 
$`Month 5`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 16.525 
No. of observations: 22 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           14   0.74847       0.24540     TRUE
[b+c] = X2           12   0.62027       0.11395     TRUE
[a+b+c] = X1+X2      21   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2           9                             TRUE
[b]                   0                            FALSE
[c] = X2|X1           7                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

$`Month 4`

Partition of squared Bray distance in dbRDA 

Call: varpart(Y = x, X = ~., y, data = z)

Explanatory tables:
X1:  ~.
X2:  y 

No. of explanatory tables: 2 
Total variation (SS): 27.016 
No. of observations: 25 

Partition table:
                     Df R.squared Adj.R.squared Testable
[a+b] = X1           13   0.19217      -0.76255     TRUE
[b+c] = X2           11   0.53674       0.14475     TRUE
[a+b+c] = X1+X2      24   1.00000                   TRUE
Individual fractions                                    
[a] = X1|X2          13                             TRUE
[b]                   0                            FALSE
[c] = X2|X1          11                             TRUE
[d] = Residuals                                    FALSE
---
Use function ‘dbrda’ to test significance of fractions of interest

Warning message:
collinearity detected: redundant variable(s)  between tables X1, X2
results are probably incorrect: remove redundant variable(s) and repeat the analysis 
Warning message:
In rm(abFrac, aFrac, abFrac0, pcnm_df, bcFrac, bcFrac0, step.space) :
  object 'abFrac0' not found
